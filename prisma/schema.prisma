generator client {
  provider = "prisma-client-js"
  output   = "../src/data/database/generated/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model cmds {
  id     Int    @id @default(autoincrement())
  name   String @db.VarChar(20)
  usages Int?   @default(0)
  uses   uses[]
}

model hunts {
  user_id           String @id @db.VarChar
  demon_tries       Int?   @default(0)
  demon_success     Int?   @default(0)
  demon_hunted      Int?   @default(0)
  giant_tries       Int?   @default(0)
  giant_success     Int?   @default(0)
  giant_hunted      Int?   @default(0)
  angel_tries       Int?   @default(0)
  angel_success     Int?   @default(0)
  angel_hunted      Int?   @default(0)
  archangel_tries   Int?   @default(0)
  archangel_success Int?   @default(0)
  archangel_hunted  Int?   @default(0)
  demigod_tries     Int?   @default(0)
  demigod_success   Int?   @default(0)
  demigod_hunted    Int?   @default(0)
  god_tries         Int?   @default(0)
  god_success       Int?   @default(0)
  god_hunted        Int?   @default(0)
  users             users  @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_user_id")
}

model roletauser {
  user_id    String @id @db.VarChar(20)
  earn_money Int?   @default(0)
  lost_money Int?   @default(0)
  lost_games Int?   @default(0)
  won_games  Int?   @default(0)
  users      users  @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_user")
}

model pokeruser {
  user_id         String @id @db.VarChar(20)
  earn_money      Int?   @default(0)
  lost_money      Int?   @default(0)
  lost_games      Int?   @default(0)
  won_games       Int?   @default(0)
  royal_flush     Int?   @default(0)
  straight_flush  Int?   @default(0)
  four_of_a_kind  Int?   @default(0)
  full_house      Int?   @default(0)
  flush           Int?   @default(0)
  straight        Int?   @default(0)
  three_of_a_kind Int?   @default(0)
  two_pair        Int?   @default(0)
  pair            Int?   @default(0)
  high_card       Int?   @default(0)
  folded          Int?   @default(0)
  users           users  @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_user")
}

model users {
  id               String          @id @db.VarChar(20)
  uses             Int?            @default(0)
  taxes            Int?            @default(0)
  bichouser        bichouser?
  hunts            hunts?
  roletauser       roletauser?
  uses_usersTouses uses[]
  weekly_hunts     weekly_hunts[]
  transactions     transactions[]
  pokeruser        pokeruser[]
  farmuser         farmuser[]
  blackjackuser    blackjackuser[]
  coinflipuser     coinflipuser[]
}

model uses {
  id       Int     @id @default(autoincrement())
  user_id  String? @db.VarChar(20)
  cmd_id   Int?
  guild_id String  @db.VarChar(20)
  date     BigInt?
  args     String?
  cmds     cmds?   @relation(fields: [cmd_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users    users?  @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model bichouser {
  user_id    String @id @db.VarChar(20)
  earn_money Int?   @default(0)
  lost_money Int?   @default(0)
  lost_games Int?   @default(0)
  won_games  Int?   @default(0)
  users      users  @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_user")
}

model blackjackuser {
  user_id    String @id @db.VarChar(20)
  earn_money Int?   @default(0)
  lost_money Int?   @default(0)
  lost_games Int?   @default(0)
  won_games  Int?   @default(0)
  users      users  @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_user")
}

model coinflipuser {
  user_id    String @id @db.VarChar(20)
  earn_money Int?   @default(0)
  lost_money Int?   @default(0)
  lost_games Int?   @default(0)
  won_games  Int?   @default(0)
  users      users  @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_user")
}

model weekly_hunts {
  id        Int      @id @default(autoincrement())
  user_id   String   @db.VarChar(20)
  hunt_type String   @db.VarChar(10)
  hunted    Int
  hunted_at DateTime @default(dbgenerated("CURRENT_DATE")) @db.Date
  user_tag  String?  @db.VarChar(40)
  users     users    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model transactions {
  id            Int    @id @default(autoincrement())
  author_id     String @db.VarChar(20)
  target_id     String @db.VarChar(20)
  amount        Int
  currency_type String @db.VarChar(15)
  reason        String @db.VarChar(40)
  date          BigInt
  users         users  @relation(fields: [author_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model farmuser {
  user_id String @db.VarChar(20)
  plant   Int
  harvest Int?   @default(0)
  rotted  Int?   @default(0)
  users   users  @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_user")

  @@unique([user_id, plant])
}
